name: Modflow-API-Ag continuous integration

on:
  push:
    branches: [main,]
  pull_request:
    branches: [main,]
    
jobs:
  ModflowAPI_AGmvr_CI:
    name: autotests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        python-version: [3.8, 3.9, "3.10"]
        run-type: [std]
        test-pth: ["./autotest"]
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout Modflow-API-Ag-Package repo
      uses: actions/checkout@v3

    - name: Get branch name
      uses: nelonoel/branch-name@v1.0.1

    - name: Cache Miniconda
      uses: actions/cache@v2.1.0
      env:
        # Increase this value to reset cache if environment.yml has changed
        CACHE_NUMBER: 1
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.run-type }}-${{ env.CACHE_NUMBER }}-${{ hashFiles('etc/environment.yml') }}

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.1.1
      with:
        python-version: ${{ matrix.python-version }}
        mamba-version: "*"
        channels: conda-forge
        auto-update-conda: true
        activate-environment: modflowapi
        use-only-tar-bz2: true

    - name: Add packages to modflowapi environment using mamba or conda
      shell: bash -l {0}
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          conda env update --name modflowapi --file etc/environment.yml
        else
          mamba env update --name modflowapi --file etc/environment.yml
        fi

    - name: Install flopy and ModflowApi
      shell: bash -l {0}
      run: |  
        pip install modflowapi
        cd data
        pip install https://github.com/modflowpy/flopy/zipball/develop
        cd ..
      
    - name: Run pytest CI testing suite for Modflow-API-Ag-Package
      shell: bash -l {0}
      run: |
        cd bin
        chmod a+x libmf6.so
        chmod a+x libmf6.dll
        cd mac_arm
        chmod a+x libmf6.dylib
        cd ../mac_x86_64
        chmod a+x libmf6.dylib
        cd ../..
        pip install pytest
        pip install pytest-cov
        pip install .
        cd autotest
        pytest -v

